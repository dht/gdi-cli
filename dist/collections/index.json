{
    "ip": {
        "type": "SH",
        "file": "ip.sh",
        "collection": "core",
        "shortcuts": [
            "ip"
        ],
        "description": "prints your ip"
    },
    "list": {
        "type": "SH",
        "file": "list.sh",
        "collection": "global",
        "shortcuts": [
            "list"
        ],
        "description": "list"
    },
    "clearNodemodules": {
        "type": "TS_NODE",
        "file": "clear-nodemodules.ts",
        "collection": "dev",
        "shortcuts": [
            "clearnm"
        ],
        "description": "clears node"
    },
    "counter": {
        "type": "TS_NODE",
        "file": "counter.ts",
        "collection": "dev",
        "shortcuts": [
            "counter",
            "cloc"
        ],
        "description": "counts files"
    },
    "depCheck": {
        "type": "SH",
        "file": "dep-check.sh",
        "collection": "dev",
        "shortcuts": [
            "depCheck"
        ],
        "description": "check dependencies for all packages"
    },
    "depSync": {
        "type": "NODE",
        "file": "dep-sync.js",
        "collection": "dev",
        "shortcuts": [],
        "description": ""
    },
    "depTree": {
        "type": "NODE",
        "file": "dep-tree.js",
        "collection": "dev",
        "shortcuts": [
            "depTree"
        ],
        "description": ""
    },
    "errorsAnalyze": {
        "type": "NODE",
        "file": "errors.analyze.js",
        "collection": "dev",
        "shortcuts": [
            "err-analyze"
        ],
        "description": ""
    },
    "knode": {
        "type": "SH",
        "file": "knode.sh",
        "collection": "dev",
        "shortcuts": [
            "knode"
        ],
        "description": "stops all nodeJs processes"
    },
    "large": {
        "type": "SH",
        "file": "large.sh",
        "collection": "global",
        "shortcuts": [
            "large"
        ],
        "description": "find large files in commit history"
    },
    "lines": {
        "type": "SH",
        "file": "lines.sh",
        "collection": "dev",
        "shortcuts": [
            "lines"
        ],
        "description": "calculate lines"
    },
    "nodemon": {
        "type": "SH",
        "file": "nodemon.sh",
        "collection": "dev",
        "shortcuts": [
            "mon"
        ],
        "description": "runs and watches a node script"
    },
    "port": {
        "type": "SH",
        "file": "port.sh",
        "collection": "dev",
        "shortcuts": [
            "port"
        ],
        "description": "kills a port"
    },
    "pushSubmodules": {
        "type": "SH",
        "file": "pushSubmodules.sh",
        "collection": "dev",
        "shortcuts": [
            "subm"
        ],
        "description": "pushes submodules"
    },
    "smartBuild": {
        "type": "NODE",
        "file": "smart-build.js",
        "collection": "dev",
        "shortcuts": [],
        "description": ""
    },
    "smartPublish": {
        "type": "NODE",
        "file": "smart-publish.js",
        "collection": "dev",
        "shortcuts": [],
        "description": ""
    },
    "syncClients": {
        "type": "NODE",
        "file": "sync-clients.js",
        "collection": "dev",
        "shortcuts": [],
        "description": ""
    },
    "watchBuild": {
        "type": "TS_NODE",
        "file": "watch-build.ts",
        "collection": "dev",
        "shortcuts": [
            "wb"
        ],
        "description": "watches src "
    },
    "yaml": {
        "type": "TS_NODE",
        "file": "yaml.ts",
        "collection": "dev",
        "shortcuts": [
            "yaml"
        ],
        "description": "watches a yaml, translates it to json on change"
    },
    "connect": {
        "type": "TS_NODE",
        "file": "connect.ts",
        "collection": "firebase",
        "shortcuts": [
            "connect"
        ],
        "description": "connect project to Firebase"
    },
    "create": {
        "type": "TS_NODE",
        "file": "create.ts",
        "collection": "scaffolding",
        "shortcuts": [
            "create"
        ],
        "description": "generates scaffolding for fs and data"
    },
    "ping": {
        "type": "SH",
        "file": "ping.sh",
        "collection": "firebase",
        "shortcuts": [
            "ping"
        ],
        "description": "ping"
    },
    "admin": {
        "type": "SH",
        "file": "admin.sh",
        "collection": "global",
        "shortcuts": [
            "admin"
        ],
        "description": "start the admin in dev-mode"
    },
    "blocksRebuild": {
        "type": "TS_NODE",
        "file": "blocks-rebuild.ts",
        "collection": "global",
        "shortcuts": [
            "blocks"
        ],
        "description": "rebuild node"
    },
    "bootstrap": {
        "type": "TS_NODE",
        "file": "bootstrap.ts",
        "collection": "global",
        "shortcuts": [
            "bootstrap"
        ],
        "description": "bootstrap gdi instance"
    },
    "deploy": {
        "type": "SH",
        "file": "deploy.sh",
        "collection": "global",
        "shortcuts": [
            "deploy"
        ],
        "description": "deploys both gdi-admin and gdi site"
    },
    "init": {
        "type": "SH",
        "file": "init.sh",
        "collection": "global",
        "shortcuts": [
            "init"
        ],
        "description": "creates a new project"
    },
    "nice": {
        "type": "SH",
        "file": "nice.sh",
        "collection": "global",
        "shortcuts": [
            "nice"
        ],
        "description": "bootstraps a new site"
    },
    "preview": {
        "type": "SH",
        "file": "preview.sh",
        "collection": "global",
        "shortcuts": [
            "preview"
        ],
        "description": "start the site in dev-mode"
    },
    "start": {
        "type": "SH",
        "file": "start.sh",
        "collection": "global",
        "shortcuts": [
            "start"
        ],
        "description": "starts the admin in dev-mode"
    },
    "calcImagesSize": {
        "type": "TS_NODE",
        "file": "calc-images-size.ts",
        "collection": "images",
        "shortcuts": [
            "img-size"
        ],
        "description": "calculate image sizes"
    },
    "compressImages": {
        "type": "TS_NODE",
        "file": "compress-images.ts",
        "collection": "images",
        "shortcuts": [
            "img",
            "raw",
            "png"
        ],
        "description": "watches and compress images"
    },
    "screenshots": {
        "type": "TS_NODE",
        "file": "screenshots.ts",
        "collection": "images",
        "shortcuts": [
            "screenshot",
            "screenshots"
        ],
        "description": "takes screenshots for current template"
    },
    "quickServer": {
        "type": "TS_NODE",
        "file": "quick-server.ts",
        "collection": "proxies",
        "shortcuts": [
            "quick"
        ],
        "description": "quick access to staging"
    },
    "addJestMono": {
        "type": "TS_NODE",
        "file": "add-jest-mono.ts",
        "collection": "scaffolding",
        "shortcuts": [
            "monojest"
        ],
        "description": "adds jest to all packages in monorepo"
    },
    "apps": {
        "type": "TS_NODE",
        "file": "apps.ts",
        "collection": "scaffolding",
        "shortcuts": [
            "apps"
        ],
        "description": "regenerate apps package"
    },
    "containers": {
        "type": "TS_NODE",
        "file": "containers.ts",
        "collection": "scaffolding",
        "shortcuts": [
            "cont"
        ],
        "description": "generates containers for the component directory"
    },
    "staging": {
        "type": "TS_NODE",
        "file": "staging.ts",
        "collection": "scaffolding",
        "shortcuts": [
            "staging"
        ],
        "description": "configure staging"
    },
    "seedAdmin": {
        "type": "TS_NODE",
        "file": "seed.admin.ts",
        "collection": "seeding",
        "shortcuts": [
            "setAdmin"
        ],
        "description": "make an existing user an admin"
    },
    "seedClearAll": {
        "type": "SH",
        "file": "seed.clearAll.sh",
        "collection": "seeding",
        "shortcuts": [
            "seedClearAll"
        ],
        "description": "clears all firestore data"
    },
    "seedFirestore": {
        "type": "TS_NODE",
        "file": "seed.firestore.ts",
        "collection": "seeding",
        "shortcuts": [
            "seed"
        ],
        "description": "generate firestore data"
    },
    "i18NEditor": {
        "type": "TS_NODE",
        "file": "i18n-editor.ts",
        "collection": "transformers",
        "shortcuts": [
            "edit-lan"
        ],
        "description": "translate i"
    },
    "i18N": {
        "type": "TS_NODE",
        "file": "i18n.ts",
        "collection": "transformers",
        "shortcuts": [
            "translate"
        ],
        "description": "translate i"
    },
    "translate": {
        "type": "SH",
        "file": "translate.sh",
        "collection": "transformers",
        "shortcuts": [
            "translateAll"
        ],
        "description": "translate all apps with Google Translate"
    },
    "generateWorkflows": {
        "type": "NODE",
        "file": "generate-workflows.js",
        "collection": "vscode",
        "shortcuts": [
            "workflows"
        ],
        "description": ""
    },
    "styleComponentsAll": {
        "type": "TS_NODE",
        "file": "style-components-all.ts",
        "collection": "vscode",
        "shortcuts": [
            "st-all"
        ],
        "description": "add a style component tag"
    },
    "styleComponents": {
        "type": "TS_NODE",
        "file": "style-components.ts",
        "collection": "vscode",
        "shortcuts": [
            "st"
        ],
        "description": "add a style component tag"
    }
}